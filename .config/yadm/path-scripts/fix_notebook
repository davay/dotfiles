#!/usr/bin/env python3

import json
import sys
import argparse
from pathlib import Path

def main():
    parser = argparse.ArgumentParser(description='Fix missing kernelspec in Jupyter notebooks')
    parser.add_argument('notebook', help='Path to the notebook file')
    parser.add_argument('-k', '--kernel', default='python3', help='Kernel name (default: python3)')
    parser.add_argument('-d', '--display-name', default='Python 3', help='Display name (default: Python 3)')
    
    args = parser.parse_args()
    
    notebook_path = Path(args.notebook)
    
    if not notebook_path.exists():
        print(f"Error: File '{notebook_path}' not found", file=sys.stderr)
        sys.exit(1)
    
    if not notebook_path.suffix == '.ipynb':
        print(f"Warning: '{notebook_path}' doesn't have .ipynb extension")
    
    try:
        with open(notebook_path, 'r') as f:
            notebook = json.load(f)
        
        if 'metadata' not in notebook:
            notebook['metadata'] = {}
        
        notebook['metadata']['kernelspec'] = {
            "display_name": args.display_name,
            "language": "python",
            "name": args.kernel
        }
        
        with open(notebook_path, 'w') as f:
            json.dump(notebook, f, indent=2)
        
        print(f"âœ“ Fixed kernelspec in {notebook_path}")
        
    except json.JSONDecodeError as e:
        print(f"Error: Invalid JSON in {notebook_path}: {e}", file=sys.stderr)
        sys.exit(1)
    except Exception as e:
        print(f"Error: {e}", file=sys.stderr)
        sys.exit(1)

if __name__ == "__main__":
    main()
