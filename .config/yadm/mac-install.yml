---
- name: Mac setup
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    - name: "Homebrew: Add taps"
      community.general.homebrew_tap:
        name:
          - koekeishiya/formulae
          - felixkratz/formulae
          - hashicorp/tap

    - name: "Homebrew: Install packages"
      community.general.homebrew:
        name:
          - nvim
          - zsh
          - fish
          - gh
          - python
          - mas
          - tree
          - sl
          - htop
          - fzf
          - coreutils
          - jq
          - node
          - lua
          - moreutils
          - gnu-sed
          - rust
          - code-minimap
          - imagemagick
          - pidof
          - neofetch
          - pandoc
          - ripgrep
          - fd
          - thefuck
          - webpack
          - sketchybar
          - pipes-sh
          - mdcat
          - git-lfs
          - openjdk
          - docker-compose
          - luarocks
          - cava
          - powerlevel10k
          - lsd
          - bat
          - bat-extras
          - oven-sh/bun/bun
          - jesseduffield/lazygit/lazygit
          - saulpw/vd/visidata
          - xsv
          - skim # pdf viewer for latex in nvim
          - zsh-vi-mode # oh-my-zsh
          - zsh-autosuggestions # oh-my-zsh
          - zsh-syntax-highlighting # oh-my-zsh
          - zsh-autocomplete # oh-my-zsh
          - arduino-cli
          - platformio
          - go
          - ffmpeg
          - ghostty
          - yazi
          - mosh
          - abduco
          - xh
          - bruno-cli
          - charmbracelet/tap/mods
          - hashicorp/tap/terraform
          - ollama
          - mutagen-io/mutagen/mutagen
          - stats
          - devutils
          - uv
          - pastel
          - borders
          - gitui
        state: latest
        update_homebrew: yes

    - name: "Add Fish shell to /etc/shells"
      ansible.builtin.lineinfile:
        path: /etc/shells
        line: /opt/homebrew/bin/fish
        state: present
      become: yes

    - name: "Change default shell to Fish"
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        shell: /opt/homebrew/bin/fish
      become: yes

    - name: "Homebrew: Install casks"
      community.general.homebrew_cask:
        name:
          - steam
          - discord
          - google-cloud-sdk
          - visual-studio-code
          - docker
          - karabiner-elements
          - sf-symbols
          - linearmouse
          - shottr
          - 1password
          - mullvadvpn
          - figma
          - affinity-designer
          - affinity-photo
          - affinity-publisher
          - postman
          - arc
          - backblaze
          - parallels
          - rectangle-pro
          - atext
          - dotnet-sdk
          - raycast
          - microsoft-teams
          - anaconda
          - google-drive
          - gpg-suite
          - iterm2
          - iina
          - pycharm
          - tableau
          - alt-tab
          - slack
          - webcatalog
          - copilot
          - altserver
          - unified-remote
          - quarto
          - reader
          - background-music
          - craft
          - zoom
          - 1password-cli
          - bettertouchtool
          - bambu-studio
          - keyclu
          - obs
          - lunar
          - hstracker # hearthstone
          - mactex
          - kindavim
          - wooshy
          - freecad # 3d-printing
          - kicad # pcb
          - tuist # Xcode
          - mimestream # gmail
          - piphero
          - balenaetcher
          - bruno
          - logi-options+
          - claude
          - nikitabobko/tap/aerospace
          - jordanbaird-ice
        state: latest

    - name: "Homebrew: Start Services"
      community.general.homebrew_services:
        name: 
          # yabai & skhd has their own yabai --start-service, not sure if same
          # - yabai 
          # - skhd
          - sketchybar
          # - ollama
        state: present

    - name: "Cargo: Install Rust Packages"
      community.general.cargo:
        name:
          - wallust
          - tree-sitter-cli # To auto install TS parsers

    - name: "Mac App Store: Install apps"
      community.general.mas:
        id:
          - 1440147259 # Adguard for Safari
          - 1601151613 # Baking Soda for Safari
          - 1592917505 # Noir for Safari
          - 1480933944 # Vimari for Safari
          - 6471380298 # StopTheMadness for Safari
          - 1622835804 # Kagi for Safari
          - 1519867270 # RefinedGithub for Safari
          - 1552641506 # GhostText for Safari
          - 1520333300 # Wappalyzer for Safari
          - 6738274497 # Raycast Companion for Safari
          - 937984704 # Amphetamine
          - 409183694 # Keynote
          - 409203825 # Numbers
          - 409201541 # Pages
          - 1448648921 # Seashore
          - 1276493162 # reMarkable
          - 1541862561 # FireShot for Safari
        state: latest

    # Mac Defaults
    - name: "osx_defaults: Disable system Tink sound"
      community.general.osx_defaults:
        domain: com.apple.systemsound
        key: com.apple.sound.uiaudio.enabled
        type: int
        value: 0
        state: present
    
    - name: "osx_defaults: Enable Key Repeat"
      community.general.osx_defaults:
        domain: NSGlobalDomain
        key: ApplePressAndHoldEnabled
        type: bool
        value: false
        state: present

    - name: "osx_defaults: Decrease key repeat initial delay"
      community.general.osx_defaults:
        domain: NSGlobalDomain
        key: InitialKeyRepeat
        type: int
        value: 10
        state: present

    - name: "osx_defaults: Decrease delay between key repeats"
      community.general.osx_defaults:
        domain: NSGlobalDomain
        key: KeyRepeat
        type: int
        value: 2
        state: present

    - name: "osx_defaults: Reduce alert sound volume"
      community.general.osx_defaults:
        domain: NSGlobalDomain
        key: com.apple.sound.beep.volume
        type: float

        # Alert volume conversion:
        # 75%: 0.7788008
        # 50%: 0.6065307
        # 25%: 0.4723665
        value: 0.6065307

    - name: "osx_defaults: Disable spaces autoreordering"
      community.general.osx_defaults:
        domain: NSGlobalDomain
        key: _HIHideMenuBar
        type: int
        value: 1
        state: present

    - name: "osx_defaults: Autohide menu bar"
      community.general.osx_defaults:
        domain: com.apple.dock
        key: mru-spaces
        type: bool
        value: false
        state: present

    - name: "osx_defaults: Disable mouse acceleration"
      community.general.osx_defaults:
        domain: .GlobalPreferences
        key: com.apple.mouse.scaling
        type: int
        value: -1
        state: present

    ### https://apple.stackexchange.com/questions/59556/is-there-a-way-to-completely-disable-dock

    - name: "osx_defaults: Autohide dock"
      community.general.osx_defaults:
        domain: com.apple.dock
        key: autohide
        type: bool
        value: true
        state: present

    - name: "osx_defaults: Remove autohide-delay"
      community.general.osx_defaults:
        domain: com.apple.dock
        key: autohide-delay
        type: float
        # A high value (e.g. 1000) will effectively prevent dock from showing automatically
        value: 0
        state: present

    - name: "osx_defaults: Faster dock show animation"
      community.general.osx_defaults:
        domain: com.apple.dock
        key: autohide-time-modifier
        type: float
        value: 0.20
        state: present

    - name: "osx_defaults: Disable bounce animation for icons with notification in dock"
      community.general.osx_defaults:
        domain: com.apple.dock
        key: no-bouncing
        type: bool
        value: true
        state: present

    - name: "osx_defaults: Enable dragging any part of window with ctrl + cmd"
      community.general.osx_defaults:
        domain: NSGlobalDomain
        key: NSWindowShouldDragOnGesture
        type: bool
        value: true
        state: present
    
    - name: "osx_defaults: Enable 'Group windows by application', for AeroSpace"
      community.general.osx_defaults:
        domain: com.apple.dock
        key: expose-group-apps
        type: bool
        value: true
        state: present
    
    - name: "osx_defaults: Disables 'Displays have separate Spaces', for Aerospace"
      community.general.osx_defaults:
        domain: com.apple.spaces
        key: spans-displays
        type: bool
        value: true # yes true disables it
        state: present
