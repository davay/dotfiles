#!/bin/sh -x
set -e # exit on any error

# Because Git submodule commands cannot operate without a work tree, they must
# be run from within $HOME (assuming this is the root of your dotfiles)
cd $HOME
echo "Init submodules"
yadm submodule update --recursive --init

# Rosetta
yes A | softwareupdate --install-rosetta

# Ansible
brew install ansible
ansible-galaxy install -r ~/.config/yadm/requirements.yml
ansible-playbook -vv ~/.config/yadm/mac-install.yml -i ~/.config/yadm/inventory --ask-become-pass

# Import defaults, I don't think just backing them up works
for plist in ~/.config/yadm/plist/*.plist; do
    # Check if file exists (this prevents errors if no .plist files are found)
    if [ -f "$plist" ]; then
        # Extract the filename without path and extension
        filename=$(basename "$plist")
        domain="${filename%.*}"
        defaults import "$domain" "$plist"
        echo "Imported defaults for $domain"
    fi
done

# Disable sound effects on boot
sudo nvram StartupMute=%01

# Fonts
sudo cp ~/.config/yadm/fonts/* /Library/Fonts/.

# Create the option to allow apps from anywhere in settings
# ""|| true" so script doesn't exit, 
# Since this always throws an error saying:
# "Globally disabling the assessment system needs to be confirmed in System Settings."
sudo spctl --global-disable || true

# catpuccin warp themes
mkdir -p ~/.warp/themes/
curl --output-dir ~/.warp/themes -LO https://raw.githubusercontent.com/catppuccin/warp/main/dist/catppuccin_latte.yml
curl --output-dir ~/.warp/themes -LO https://raw.githubusercontent.com/catppuccin/warp/main/dist/catppuccin_frappe.yml
curl --output-dir ~/.warp/themes -LO https://raw.githubusercontent.com/catppuccin/warp/main/dist/catppuccin_macchiato.yml
curl --output-dir ~/.warp/themes -LO https://raw.githubusercontent.com/catppuccin/warp/main/dist/catppuccin_mocha.yml

# Install Nix package manager, mostly for lazy-lsp.nvim
yes | curl -L https://nixos.org/nix/install | sh

# Populate locate db, if after this db is still not crated, try "sudo /usr/libexec/locate.updatedb"
sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.locate.plist

# Set hostnames
sudo scutil --set HostName da-mac # Primary hostnmae (e.g. user@hostname)
sudo scutil --set LocalHostName da-mac # Bonjour local network hostname (e.g. hostname.local)
sudo scutil --set ComputerName da-mac # Friendly name (e.g. in Finder)
dscacheutil -flushcache

# Backblaze
backblaze_path="/opt/homebrew/Caskroom/backblaze"
backblaze_version=$(\ls $backblaze_path | sort -V | tail -n 1) # escape alias-ed ls
open $backblaze_path/$backblaze_version/Backblaze\ Installer.app

# To get Altstore AltJit working
# sudo /Applications/Xcode.app/Contents/Developer/usr/bin/python3 -m pip install construct==2.10.69 qh3==0.15.1

# Finishing touch
gh auth login
cat << EOF
-----------------------------------
END OF INSTALLATION, PLEASE RESTART 
-----------------------------------
EOF

