#!/bin/sh

# Because Git submodule commands cannot operate without a work tree, they must
# be run from within $HOME (assuming this is the root of your dotfiles)
cd $HOME

echo "Init submodules"
yadm submodule update --recursive --init

system_type=$(uname -s)

if [[ $system_type = "Darwin" ]]; then
	if ! command -v brew >/dev/null 2>&1; then
		echo "Installing homebrew"
		/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
	fi
	if [[ -f $HOME/.Brewfile ]]; then
		echo "Updating homebrew bundle"
		brew bundle --global
	fi
elif [[ $system_type = "Linux" ]]; then # built for manjaro i3 minimal
	if [[ $(command -v pacman) ]]; then
		git clone https://github.com/kewlfft/ansible-aur.git ~/.ansible/plugins/modules/aur
		sudo pacman --noconfirm -S ansible
		ansible-playbook ~/deployment/base-install.yml
		if [[ $HOSTNAME = "da" ]]; then
			ansible-playbook ~/deployment/home-install.yml
		fi
	fi

	: 'COMMENTED OUT if empty(glob("~/.vim/autoload/plug.vim"))
	silent! execute '!curl --create-dirs -fsSLo ~/.vim/autoload/plug.vim https://raw.github.com/junegunn/vim-plug/master/plug.vim'
	autocmd VimEnter * silent! PlugInstall
	endif

	silent! if plug#begin()

	Plug 'airblade/vim-gitgutter'
	Plug 'c9s/perlomni.vim', { 'for': 'perl' }
	Plug 'ctrlpvim/ctrlp.vim'
	Plug 'vim-syntastic/syntastic'
	Plug 'yggdroot/indentLine'

	if v:version >= 703
		Plug 'gorodinskiy/vim-coloresque'
		Plug 'jamessan/vim-gnupg'
		endif
		if v:version >= 704
			Plug 'vim-pandoc/vim-pandoc-syntax'
			endif

			call plug#end()
			endif

			if command -v vim >/dev/null 2>&1; then
				echo "Bootstraping Vim"
				vim '+PlugUpdate' '+PlugClean!' '+PlugUpdate' '+qall'fi
				'
