# functions come from .zshenv
# techincally the $() is not necessary, left in for easier reading

# focus window
alt - h : if [ $(get_layout) = "stack" ]; then (yabai -m window --focus stack.prev || yabai -m window --focus stack.last); else yabai -m window --focus west; fi
alt - j : yabai -m window --focus south
alt - k : yabai -m window --focus north
alt - l : if [ $(get_layout) = "stack" ]; then (yabai -m window --focus stack.next || yabai -m window --focus stack.first); else yabai -m window --focus east; fi

# move window
alt + shift - h : yabai -m window --warp west
alt + shift - j : yabai -m window --warp south
alt + shift - k : yabai -m window --warp north
alt + shift - l : yabai -m window --warp east

# [SIP] create and destroy desktops
alt - d : yabai -m space --create && yabai -m space --focus $(get_last_space)
alt + shift - d : yabai -m space --create && yabai -m window --space $(get_last_space) && yabai -m space --focus $(get_last_space)
alt - w : yabai -m space --destroy

# [SIP] fast focus desktop
alt - 1 : yabai -m space --focus 1
alt - 2 : yabai -m space --focus 2
alt - 3 : yabai -m space --focus 3
alt - 4 : yabai -m space --focus 4
alt - 5 : yabai -m space --focus 5
alt - 6 : yabai -m space --focus 6
alt - 7 : yabai -m space --focus 7
alt - 8 : yabai -m space --focus 8

# [SIP] send window to desktop and follow focus 
alt + shift - 1 : yabai -m window --space 1 && yabai -m space --focus 1 
alt + shift - 2 : yabai -m window --space 2 && yabai -m space --focus 2 
alt + shift - 3 : yabai -m window --space 3 && yabai -m space --focus 3 
alt + shift - 4 : yabai -m window --space 4 && yabai -m space --focus 4 
alt + shift - 5 : yabai -m window --space 5 && yabai -m space --focus 5 
alt + shift - 6 : yabai -m window --space 6 && yabai -m space --focus 6 
alt + shift - 7 : yabai -m window --space 7 && yabai -m space --focus 7 
alt + shift - 8 : yabai -m window --space 8 && yabai -m space --focus 8 
alt + shift - z : yabai -m window --display next && yabai -m display --focus next
alt + shift - c : yabai -m window --display prev && yabai -m display --focus prev
alt + shift - q : if [[ $(is_first_space) == "false" ]]; then yabai -m window --space prev && yabai -m space --focus prev && yabai -m window --focus last; fi
alt + shift - e : if [[ $(is_last_space) == "false" ]]; then yabai -m window --space next && yabai -m space --focus next && yabai -m window --focus last; fi

# fast focus monitor
alt - z : yabai -m display --focus next
alt - c : yabai -m display --focus prev

# move to prev or next space
# order is swapped because my 2nd monitor is to the left of first monitor (right-to-left), while space goes left-to-right
alt - tab : yabai -m display --focus recent
alt - q : if [[ $(is_first_space) == "false" ]]; then yabai -m space --focus prev; fi
alt - e: if [[ $(is_last_space) == "false" ]]; then yabai -m space --focus next; fi

# toggle (tiling) window fullscreen zoom
alt - f : yabai -m window --toggle zoom-fullscreen

# toggle window native fullscreen
alt + shift - f : yabai -m window --toggle native-fullscreen

# toggle window split type
alt - x : yabai -m window --toggle split

# float / unfloat window and restore position
alt - t : yabai -m window --toggle float && /tmp/yabai-restore/$(yabai -m query --windows --window | jq -re '.id').restore 2>/dev/null || true

# change layout of desktop
alt + shift - t : yabai -m space --layout $(yabai -m query --spaces --space | jq -r 'if .type == "bsp" then "float" else "bsp" end') && sketchybar -m --trigger tiling_mode_update &> /dev/null

# [SIP] toggle picture-in-picture
alt - p : yabai -m window --toggle pip

# get window title
# 0x32 = `
# 0x2F = .
alt - 0x2F : yabai -m query --windows --window | jq .app | pbcopy
# alt - 0x2F : yabai -m query --windows --window | pbcopy

# text macro, mostly for Agenda (Markdown) -- WARNING release the alt key asap. Prepend "sleep 0.001 &&" for further buffer.
# alt - 0x1B : osascript -e 'tell application "System Events" to keystroke "[] "'

# screenshot, -[c]lipboard -[i]nteractive -[v]ideo -[V]ideo <seconds> -[k]licks 
# alt+shift-s is used for shottr
alt - s : screencapture -c -i 
alt - v : screencapture -V 20 -k ~/Desktop/"$(date +'%F_%H%M%S').mov" &

# restart sketchybar 
alt - r : brew services restart sketchybar

# restart yabai 
alt - y : yabai --restart-service

# Apps
shift + cmd - space : open -a 'Warp'
ctrl + alt - n : open -na 'Arc' --args --incognito 
ctrl + alt - e : open -a 'Finder'
alt - m : open -a 'Reminders'
